/**Project 接口提供的file()方法，创建一个相对于项目目录的一个java.io.File实例
 * 这里是读取 version.properties 版本配置文件*/
ext.versionFile = file('version.properties')

/**这是一个task配置块：不同于之前的task，该task没有定义动作(doLast(),doFirst())，
 * task配置块永远在task动作之前执行*/
task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    println 'Reading the version file.'
    /**版本文件不存在就抛出异常*/
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exist: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()
    /**Groovy通过该方法来讲配置文件中的属性读取到versionProps中*/
    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    /**在version.properties 文件中定义了major minor release属性*/
    return new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

task printVersion {
    doLast {
        println("Version: $version")
    }
}

class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        /**在release属性为false的时候才加上-SNAPSHOT后缀,
         * Gradle 总是会调用toString()方法来读取version的值，所以我们要重写该方法，以实现自定义的版本号表示*/
        "$major.$minor${release ? '' : '-SNAPSHOT'}"
    }
}